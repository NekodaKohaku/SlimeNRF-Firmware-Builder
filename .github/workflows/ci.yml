on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üíæ Cache Zephyr Workspace
        uses: actions/cache@v3
        with:
          path: zephyr-workspace
          key: zephyr-workspace-v1-${{ runner.os }}-${{ hashFiles('zephyr-workspace/nrfconnect-ci-app/west.yml') }}
          restore-keys: |
            zephyr-workspace-v1-${{ runner.os }}-

      - name: üßπ Clean Landing Site
        run: |
          rm -rf zephyr-workspace/nrfconnect-ci-app

      - uses: actions/checkout@v4
        with:
          # Clone the repo to a subdirectory, so we can initialize the Zephyr
          # workspace in the parent directory.
          path: zephyr-workspace/nrfconnect-ci-app

      - name: üíæ Cache ~/.venv
        uses: actions/cache@v3
        with:
          path: ~/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('zephyr-workspace/zephyr/scripts/requirements.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: üß∞ Install Dependencies + West
        # Install the Zephyr host build dependencies, and the `west` Python tool. This list is from
        # https://docs.zephyrproject.org/3.6.0/develop/getting_started/index.html#install-dependencies
        run: |
          sudo apt-get update && sudo apt install --no-install-recommends \
          git \
          cmake \
          ninja-build \
          gperf \
          ccache \
          dfu-util \
          device-tree-compiler \
          wget \
          python3-dev \
          python3-pip \
          python3-setuptools \
          python3-tk \
          python3-wheel \
          python3-venv \
          xz-utils file \
          make \
          gcc \
          gcc-multilib \
          g++-multilib \
          libsdl2-dev \
          libmagic1

          python3 -m venv ~/.venv
          source ~/.venv/bin/activate
          # insert the PATH changes the venv activate made to be present for
          # future steps
          echo "PATH=$PATH" >> $GITHUB_ENV
          pip3 install west ninja

      - name: ü™Å Install Zephyr SDK
        # Fetch the Zephyr SDK from the GitHub Release artifact, unpack it and
        # run the setup script, selecting the '-c' option to install cmake
        # packages and the '-t arm-zephyr-eabi' option to install the toolchain
        # only for the arm-zephyr-eabi (Cortex-M) architecture, since we don't
        # need the other toolchains (xtensa, riscv, etc.)
        run: |
          wget -q https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.17.0/zephyr-sdk-0.17.0_linux-x86_64_minimal.tar.xz
          tar xf zephyr-sdk-0.17.0_linux-x86_64_minimal.tar.xz -C ~/
          ~/zephyr-sdk-0.17.0/setup.sh -c -t arm-zephyr-eabi

      - name: ‚ôªÔ∏è Initialize Zephyr Workspace
        # Set up the Zephyr workspace and install the Python dependencies
        run: |
          cd zephyr-workspace
          rm -rf .west
          west init -l nrfconnect-ci-app
          west update --narrow -o=--depth=1

      - name: üêç Install Python Dependencies
        run: |
          cd zephyr-workspace
          pip3 install -r zephyr/scripts/requirements.txt

      - name: üíæ Cache ~/.cache/ccache
        uses: actions/cache@v3
        with:
          path: ~/.cache/ccache
          key: ccache-v1-${{ runner.os }}-${{ hashFiles('zephyr-workspace/nrfconnect-ci-app/west.yml') }}
          restore-keys: |
            ccache-v1-${{ runner.os }}-

      - name: üî® Build SlimeVR-Tracker-nRF - SuperMini
      # Tracker Firmware Build for SuperMini
        run: |
          cd zephyr-workspace
          sudo rm -rf zephyr/boards/arm/supermini_uf2
          cp -r SlimeVR-Tracker-nRF/boards/arm/supermini_uf2 zephyr/boards/arm/
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board supermini_uf2 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 SlimeVR-Tracker-nRF/build/zephyr/SlimeNRF_Tracker_SuperMini.uf2
              
          # print detailed ccache statistics
          ccache -sv
      - name: üî® Build SlimeVR-Tracker-nRF - XIAO
      # Tracker Firmware Build for XIAO
        run: |
          cd zephyr-workspace
          sudo rm -rf zephyr/boards/arm/xiao_uf2
          cp -r SlimeVR-Tracker-nRF/boards/arm/xiao_uf2 zephyr/boards/arm/
          sudo rm -rf SlimeVR-Tracker-nRF/build_1
          mkdir SlimeVR-Tracker-nRF/build_1
          
          # zero ccache statistics
          ccache -z
          west build \
              --board xiao_uf2 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build_1 \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build_1/zephyr/zephyr.uf2 SlimeVR-Tracker-nRF/build_1/zephyr/SlimeNRF_Tracker_XIAO.uf2
              
          # print detailed ccache statistics
          ccache -sv
      - name: üî® Build SlimeVR-Tracker-nRF - SlimeNRF_R3
      # Tracker Firmware Build for SlimeNRF R3
        run: |
          cd zephyr-workspace
          sudo rm -rf zephyr/boards/arm/slimenrf_r3_uf2
          cp -r SlimeVR-Tracker-nRF/boards/arm/slimenrf_r3_uf2 zephyr/boards/arm/
          sudo rm -rf SlimeVR-Tracker-nRF/build_2
          mkdir SlimeVR-Tracker-nRF/build_2
          
          # zero ccache statistics
          ccache -z
          west build \
              --board slimenrf_r3_uf2 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build_2 \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build_2/zephyr/zephyr.uf2 SlimeVR-Tracker-nRF/build_2/zephyr/SlimeNRF_Tracker_R3.uf2
              
          # print detailed ccache statistics
          ccache -sv
      - name: üî® Build SlimeVR-Tracker-nRF-Receiver - Nordic_eByte_Dongle
      # Receiver Firmware Build for Nordic_eByte Dongle
        run: |
          cd zephyr-workspace
          sudo rm -rf zephyr/boards/arm/nrf52840dongle_nrf52840/nrf52840dongle_nrf52840.conf
          cp SlimeVR-Tracker-nRF-Receiver/boards/nrf52840dongle_nrf52840.conf zephyr/boards/arm/nrf52840dongle_nrf52840/
          sudo rm -rf SlimeVR-Tracker-nRF-Receiver/build_nrf52840dongle_nrf52840
          mkdir SlimeVR-Tracker-nRF-Receiver/build_nrf52840dongle_nrf52840
          
          # zero ccache statistics
          ccache -z
          west build \
              --board nrf52840dongle_nrf52840 \
              --pristine=always SlimeVR-Tracker-nRF-Receiver \
              --build-dir SlimeVR-Tracker-nRF-Receiver/build_nrf52840dongle_nrf52840 \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=SlimeVR-Tracker-nRF-Receiver
              
          mv SlimeVR-Tracker-nRF-Receiver/build_nrf52840dongle_nrf52840/zephyr/zephyr.hex SlimeVR-Tracker-nRF-Receiver/build_nrf52840dongle_nrf52840/zephyr/SlimeNRF_Receiver_Nordic_eByte_Dongle.hex
              
          # print detailed ccache statistics
          ccache -sv
      - name: üî® Build SlimeVR-Tracker-nRF-Receiver - SuperMini
      # Receiver Firmware Build for SuperMini
        run: |
          cd zephyr-workspace
          sudo rm -rf zephyr/boards/arm/supermini_uf2
          cp -r SlimeVR-Tracker-nRF-Receiver/boards/arm/supermini_uf2 zephyr/boards/arm/
          sudo rm -rf SlimeVR-Tracker-nRF-Receiver/build_supermini_uf2
          mkdir SlimeVR-Tracker-nRF-Receiver/build_supermini_uf2
          
          # zero ccache statistics
          ccache -z
          west build \
              --board supermini_uf2 \
              --pristine=always SlimeVR-Tracker-nRF-Receiver \
              --build-dir SlimeVR-Tracker-nRF-Receiver/build_supermini_uf2 \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=SlimeVR-Tracker-nRF-Receiver
              
          mv SlimeVR-Tracker-nRF-Receiver/build_supermini_uf2/zephyr/zephyr.uf2 SlimeVR-Tracker-nRF-Receiver/build_supermini_uf2/zephyr/SlimeNRF_Receiver_SuperMini.uf2

          # print detailed ccache statistics
          ccache -sv
      - name: üî® Build SlimeVR-Tracker-nRF-Receiver - XIAO
      # Receiver Firmware Build for XIAO
        run: |
          cd zephyr-workspace
          sudo rm -rf zephyr/boards/arm/xiao_ble/xiao_ble.conf
          cp SlimeVR-Tracker-nRF-Receiver/boards/xiao_ble.conf zephyr/boards/arm/xiao_ble/
          sudo rm -rf SlimeVR-Tracker-nRF-Receiver/build_xiao_uf2
          mkdir SlimeVR-Tracker-nRF-Receiver/build_xiao_uf2
          
          # zero ccache statistics
          ccache -z
          west build \
              --board xiao_ble \
              --pristine=always SlimeVR-Tracker-nRF-Receiver \
              --build-dir SlimeVR-Tracker-nRF-Receiver/build_xiao_uf2 \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=SlimeVR-Tracker-nRF-Receiver
              
          mv SlimeVR-Tracker-nRF-Receiver/build_xiao_uf2/zephyr/zephyr.uf2 SlimeVR-Tracker-nRF-Receiver/build_xiao_uf2/zephyr/SlimeNRF_Receiver_XIAO.uf2

          # print detailed ccache statistics
          ccache -sv
      - name: üíæ Upload SlimeNRF_Tracker_SuperMini.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_SuperMini.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/SlimeVR-Tracker-nRF/build/zephyr/SlimeNRF_Tracker_SuperMini.uf2
      - name: üíæ Upload SlimeNRF_Tracker_XIAO.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_XIAO.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/SlimeVR-Tracker-nRF/build_1/zephyr/SlimeNRF_Tracker_XIAO.uf2
      - name: üíæ Upload SlimeNRF_Tracker_R3.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_R3.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/SlimeVR-Tracker-nRF/build_2/zephyr/SlimeNRF_Tracker_R3.uf2
      - name: üíæ Upload SlimeNRF_Receiver_Nordic_eByte_Dongle.hex
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Receiver_Nordic_eByte_Dongle.hex
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/SlimeVR-Tracker-nRF-Receiver/build_nrf52840dongle_nrf52840/zephyr/SlimeNRF_Receiver_Nordic_eByte_Dongle.hex
      - name: üíæ Upload SlimeNRF_Receiver_SuperMini.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Receiver_SuperMini.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/SlimeVR-Tracker-nRF-Receiver/build_supermini_uf2/zephyr/SlimeNRF_Receiver_SuperMini.uf2
      - name: üíæ Upload SlimeNRF_Receiver_XIAO.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Receiver_XIAO.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/SlimeVR-Tracker-nRF-Receiver/build_xiao_uf2/zephyr/SlimeNRF_Receiver_XIAO.uf2
      - name: Update Release
        uses: johnwbyrd/update-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: zephyr-workspace/SlimeVR-Tracker-nRF/build/zephyr/SlimeNRF_Tracker_SuperMini.uf2 zephyr-workspace/SlimeVR-Tracker-nRF/build_1/zephyr/SlimeNRF_Tracker_XIAO.uf2 zephyr-workspace/SlimeVR-Tracker-nRF/build_2/zephyr/SlimeNRF_Tracker_R3.uf2 zephyr-workspace/SlimeVR-Tracker-nRF-Receiver/build_nrf52840dongle_nrf52840/zephyr/SlimeNRF_Receiver_Nordic_eByte_Dongle.hex zephyr-workspace/SlimeVR-Tracker-nRF-Receiver/build_supermini_uf2/zephyr/SlimeNRF_Receiver_SuperMini.uf2 zephyr-workspace/SlimeVR-Tracker-nRF-Receiver/build_xiao_uf2/zephyr/SlimeNRF_Receiver_XIAO.uf2