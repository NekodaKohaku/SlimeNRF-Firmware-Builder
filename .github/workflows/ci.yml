# Workflow by Shine Bright, Meow!

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  create:
  workflow_dispatch:
  schedule:
    - cron: "30 */12 * * *"

# Allow one concurrent deployment
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions: write-all

jobs:
  build:
    if: ${{ github.repository == 'Shine-Bright-Meow/SlimeNRF-Firmware-CI' }}
    runs-on: ubuntu-latest
    steps:
      - name: 💻 Acquire code
        if: always()
        uses: actions/checkout@v2

      - name: 📝 Put commit hash/name in env variables
        run: |
          echo "GIT_HASH=$(git rev-parse --short=8 HEAD)" >> $GITHUB_ENV
          echo "GIT_MESSAGE<<EOF" >> $GITHUB_ENV
          git log -1 --pretty=%B >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: 💾 Cache Zephyr Workspace
        uses: actions/cache@v3
        with:
          path: zephyr-workspace
          key: zephyr-workspace-v1-${{ runner.os }}-${{ hashFiles('zephyr-workspace/SlimeNRF-Firmware-CI/west.yml') }}
          restore-keys: |
            zephyr-workspace-v1-${{ runner.os }}-

      - name: 🧹 Clean Landing Site
        run: |
          sudo rm -rf zephyr-workspace/SlimeNRF-Firmware-CI
          mkdir zephyr-workspace/Releases
      - uses: actions/checkout@v4
        with:
          # Clone the repo to a subdirectory, so we can initialize the Zephyr
          # workspace in the parent directory.
          path: zephyr-workspace/SlimeNRF-Firmware-CI

      - name: 💾 Cache ~/.venv
        uses: actions/cache@v3
        with:
          path: ~/.venv
          key: venv-${{ runner.os }}-${{ hashFiles('zephyr-workspace/zephyr/scripts/requirements.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: 🧰 Install Dependencies + West
        # Install the Zephyr host build dependencies, and the `west` Python tool. This list is from
        # https://docs.zephyrproject.org/3.6.0/develop/getting_started/index.html#install-dependencies
        run: |
          sudo apt-get update && sudo apt install --no-install-recommends \
          git \
          cmake \
          ninja-build \
          gperf \
          ccache \
          dfu-util \
          device-tree-compiler \
          wget \
          python3-dev \
          python3-pip \
          python3-setuptools \
          python3-tk \
          python3-wheel \
          python3-venv \
          xz-utils file \
          make \
          gcc \
          gcc-multilib \
          g++-multilib \
          libsdl2-dev \
          libmagic1

          python3 -m venv ~/.venv
          source ~/.venv/bin/activate
          # insert the PATH changes the venv activate made to be present for
          # future steps
          echo "PATH=$PATH" >> $GITHUB_ENV
          pip3 install west ninja

      - name: 🪁 Install Zephyr SDK
        # Fetch the Zephyr SDK from the GitHub Release artifact, unpack it and
        # run the setup script, selecting the '-c' option to install cmake
        # packages and the '-t arm-zephyr-eabi' option to install the toolchain
        # only for the arm-zephyr-eabi (Cortex-M) architecture, since we don't
        # need the other toolchains (xtensa, riscv, etc.)
        run: |
          wget -q https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.17.0/zephyr-sdk-0.17.0_linux-x86_64_minimal.tar.xz
          tar xf zephyr-sdk-0.17.0_linux-x86_64_minimal.tar.xz -C ~/
          ~/zephyr-sdk-0.17.0/setup.sh -c -t arm-zephyr-eabi

      - name: ♻️ Initialize Zephyr Workspace
        # Set up the Zephyr workspace and install the Python dependencies
        run: |
          cd zephyr-workspace
          sudo rm -rf .west
          west init -l SlimeNRF-Firmware-CI
          west update --narrow -o=--depth=1
          west zephyr-export

      - name: 🐍 Install Python Dependencies
        run: |
          cd zephyr-workspace
          pip3 install -r zephyr/scripts/requirements.txt

      - name: 💾 Cache ~/.cache/ccache
        uses: actions/cache@v3
        with:
          path: ~/.cache/ccache
          key: ccache-v1-${{ runner.os }}-${{ hashFiles('zephyr-workspace/SlimeNRF-Firmware-CI/west.yml') }}
          restore-keys: |
            ccache-v1-${{ runner.os }}-

      - name: 🔨 Build SlimeVR-Tracker-nRF - SuperMini
      # Tracker Firmware Build for SuperMini
        run: |
          cd zephyr-workspace
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board supermini_uf2/nrf52840 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_SuperMini.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF - XIAO
      # Tracker Firmware Build for XIAO
        run: |
          cd zephyr-workspace
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board xiao_ble/nrf52840 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_XIAO.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF - SlimeNRF_R3
      # Tracker Firmware Build for SlimeNRF R3
        run: |
          cd zephyr-workspace
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board slimenrf_r3/nrf52840/uf2 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_R3.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF - SlimeVR Mini
      # Tracker Firmware Build for SlimeVR Mini
        run: |
          cd zephyr-workspace
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board slimevrmini_p1_uf2/nrf52833 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_SlimevrMini.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF - SuperMini NoSleep
      # Tracker Firmware Build for SuperMini NoSleep
        run: |
          cd zephyr-workspace
          printf "\n\nCONFIG_USE_IMU_WAKE_UP=n" >> SlimeVR-Tracker-nRF/prj.conf
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board supermini_uf2/nrf52840 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_NoSleep_SuperMini.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF - XIAO NoSleep
      # Tracker Firmware Build for XIAO NoSleep
        run: |
          cd zephyr-workspace
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board xiao_ble/nrf52840 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_NoSleep_XIAO.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF - SlimeNRF_R3 NoSleep
      # Tracker Firmware Build for SlimeNRF R3 NoSleep
        run: |
          cd zephyr-workspace
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board slimenrf_r3/nrf52840/uf2 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_NoSleep_R3.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF - SlimeVR Mini NoSleep
      # Tracker Firmware Build for SlimeVR Mini NoSleep
        run: |
          cd zephyr-workspace
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board slimevrmini_p1_uf2/nrf52833 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_NoSleep_SlimevrMini.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF - SuperMini NoSleepCLK
      # Tracker Firmware Build for SuperMini NoSleepCLK
        run: |
          cd zephyr-workspace
          find='\/\/\sclk-gpios'
          replace='clk-gpios'
          sed -i "s/$find/$replace/g" SlimeVR-Tracker-nRF/boards/arm/supermini_uf2/supermini_uf2.dts
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board supermini_uf2/nrf52840 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_NoSleepCLK_SuperMini.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF - XIAO NoSleepCLK
      # Tracker Firmware Build for XIAO NoSleepCLK
        run: |
          cd zephyr-workspace
          find="\/\/\sclk-gpios"
          replace="clk-gpios"
          sed -i "s/$find/$replace/g" SlimeVR-Tracker-nRF/boards/arm/xiao_uf2/xiao_uf2.dts
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board xiao_ble/nrf52840 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_NoSleepCLK_XIAO.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF - SuperMini CLK
      # Tracker Firmware Build for SuperMini CLK
        run: |
          cd zephyr-workspace
          find="CONFIG_USE_IMU_WAKE_UP=n"
          replace="# CONFIG_USE_IMU_WAKE_UP=n"
          sed -i "s/$find/$replace/g" SlimeVR-Tracker-nRF/prj.conf
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board supermini_uf2/nrf52840 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_CLK_SuperMini.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF - XIAO CLK
      # Tracker Firmware Build for XIAO CLK
        run: |
          cd zephyr-workspace
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board xiao_ble/nrf52840 \
              --pristine=always SlimeVR-Tracker-nRF \
              --build-dir SlimeVR-Tracker-nRF/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF

          mv SlimeVR-Tracker-nRF/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_CLK_XIAO.uf2
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF-Receiver - Nordic_eByte_Dongle
      # Receiver Firmware Build for Nordic_eByte Dongle
        run: |
          cd zephyr-workspace
          # sudo rm -rf zephyr/boards/arm/nrf52840dongle_nrf52840/nrf52840dongle_nrf52840.conf
          # cp SlimeVR-Tracker-nRF-Receiver/boards/nrf52840dongle_nrf52840.conf zephyr/boards/arm/nrf52840dongle_nrf52840/
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board nrf52840dongle/nrf52840 \
              --pristine=always SlimeVR-Tracker-nRF-Receiver \
              --build-dir SlimeVR-Tracker-nRF-Receiver/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF-Receiver
              
          mv SlimeVR-Tracker-nRF-Receiver/build/zephyr/zephyr.hex Releases/SlimeNRF_Receiver_Nordic_eByte_Dongle.hex
              
          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF-Receiver - SuperMini
      # Receiver Firmware Build for SuperMini
        run: |
          cd zephyr-workspace
          # sudo rm -rf zephyr/boards/arm/supermini_uf2
          # cp -r SlimeVR-Tracker-nRF-Receiver/boards/arm/supermini_uf2 zephyr/boards/arm/
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board supermini_uf2/nrf52840 \
              --pristine=always SlimeVR-Tracker-nRF-Receiver \
              --build-dir SlimeVR-Tracker-nRF-Receiver/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF-Receiver
              
          mv SlimeVR-Tracker-nRF-Receiver/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Receiver_SuperMini.uf2

          # print detailed ccache statistics
          ccache -sv

      - name: 🔨 Build SlimeVR-Tracker-nRF-Receiver - XIAO
      # Receiver Firmware Build for XIAO
        run: |
          cd zephyr-workspace
          # sudo rm -rf zephyr/boards/arm/xiao_ble/xiao_ble.conf
          # cp SlimeVR-Tracker-nRF-Receiver/boards/xiao_ble.conf zephyr/boards/arm/xiao_ble/
          sudo rm -rf SlimeVR-Tracker-nRF/build
          mkdir SlimeVR-Tracker-nRF/build
          
          # zero ccache statistics
          ccache -z
          west build \
              --board xiao_ble \
              --pristine=always SlimeVR-Tracker-nRF-Receiver \
              --build-dir SlimeVR-Tracker-nRF-Receiver/build \
              -- \
              -DNCS_TOOLCHAIN_VERSION=NONE \
              -DBOARD_ROOT=../SlimeVR-Tracker-nRF-Receiver
              
          mv SlimeVR-Tracker-nRF-Receiver/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Receiver_XIAO.uf2

          # print detailed ccache statistics
          ccache -sv

      # - name: 🔨 Build SlimeVR-Tracker-nRF - SuperMini (Stacked 🥪)
      # # Tracker Firmware Build for SuperMini (Stacked 🥪)
      #   run: |
      #     cd zephyr-workspace
      #     sudo rm -rf Stacked-SmolSlime/Kconfig
      #     find="sw0\s="
      #     replace="\/\/ sw0 ="
      #     sed -i "s/$find/$replace/g" Stacked-SmolSlime/boards/arm/supermini_uf2/supermini_uf2.dts
      #     cp -r SlimeVR-Tracker-nRF/vqf-c Stacked-SmolSlime/
      #     cp -r SlimeVR-Tracker-nRF/Fusion Stacked-SmolSlime/
      #     cp -r SlimeVR-Tracker-nRF/NXP-ISSDK-SensorFusion Stacked-SmolSlime/
      #     cp SlimeVR-Tracker-nRF/Kconfig Stacked-SmolSlime/
      #     sudo rm -rf Stacked-SmolSlime/build
      #     mkdir Stacked-SmolSlime/build
          
      #     # zero ccache statistics
      #     ccache -z
      #     west build \
      #         --board supermini_uf2/nrf52840 \
      #         --pristine=always Stacked-SmolSlime \
      #         --build-dir Stacked-SmolSlime/build \
      #         -- \
      #         -DNCS_TOOLCHAIN_VERSION=NONE \
      #         -DBOARD_ROOT=../Stacked-SmolSlime

      #     mv Stacked-SmolSlime/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_SuperMiniStacked.uf2
              
      #     # print detailed ccache statistics
      #     ccache -sv

      # - name: 🔨 Build SlimeVR-Tracker-nRF - SuperMini (Stacked 🥪) NoSleep
      # # Tracker Firmware Build for SuperMini (Stacked 🥪) NoSleep
      #   run: |
      #     cd zephyr-workspace
      #     printf "\n\nCONFIG_USE_IMU_WAKE_UP=n" >> Stacked-SmolSlime/prj.conf
      #     sudo rm -rf Stacked-SmolSlime/build
      #     mkdir Stacked-SmolSlime/build

      #     # zero ccache statistics
      #     ccache -z
      #     west build \
      #         --board supermini_uf2/nrf52840 \
      #         --pristine=always Stacked-SmolSlime \
      #         --build-dir Stacked-SmolSlime/build \
      #         -- \
      #         -DNCS_TOOLCHAIN_VERSION=NONE \
      #         -DBOARD_ROOT=../Stacked-SmolSlime

      #     mv Stacked-SmolSlime/build/zephyr/zephyr.uf2 Releases/SlimeNRF_Tracker_NoSleep_SuperMiniStacked.uf2
              
      #     # print detailed ccache statistics
      #     ccache -sv

      - name: 💾 Upload SlimeNRF_Tracker_SuperMini.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_SuperMini.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_SuperMini.uf2

      - name: 💾 Upload SlimeNRF_Tracker_XIAO.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_XIAO.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_XIAO.uf2

      - name: 💾 Upload SlimeNRF_Tracker_R3.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_R3.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_R3.uf2

      - name: 💾 Upload SlimeNRF_Tracker_SlimevrMini.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_SlimevrMini.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_SlimevrMini.uf2

      - name: 💾 Upload SlimeNRF_Tracker_NoSleep_SlimevrMini.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_NoSleep_SlimevrMini.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleep_SlimevrMini.uf2

      - name: 💾 Upload SlimeNRF_Tracker_NoSleep_SuperMini.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_NoSleep_SuperMini.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleep_SuperMini.uf2

      - name: 💾 Upload SlimeNRF_Tracker_NoSleep_XIAO.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_NoSleep_XIAO.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleep_XIAO.uf2

      - name: 💾 Upload SlimeNRF_Tracker_NoSleep_R3.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_NoSleep_R3.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleep_R3.uf2

      - name: 💾 Upload SlimeNRF_Tracker_NoSleepCLK_SuperMini.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_NoSleepCLK_SuperMini.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleepCLK_SuperMini.uf2

      - name: 💾 Upload SlimeNRF_Tracker_NoSleepCLK_XIAO.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_NoSleepCLK_XIAO.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleepCLK_XIAO.uf2

      - name: 💾 Upload SlimeNRF_Tracker_CLK_SuperMini.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_CLK_SuperMini.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_CLK_SuperMini.uf2

      - name: 💾 Upload SlimeNRF_Tracker_CLK_XIAO.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Tracker_CLK_XIAO.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Tracker_CLK_XIAO.uf2

      - name: 💾 Upload SlimeNRF_Receiver_Nordic_eByte_Dongle.hex
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Receiver_Nordic_eByte_Dongle.hex
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Receiver_Nordic_eByte_Dongle.hex

      - name: 💾 Upload SlimeNRF_Receiver_SuperMini.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Receiver_SuperMini.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Receiver_SuperMini.uf2

      - name: 💾 Upload SlimeNRF_Receiver_XIAO.uf2
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: SlimeNRF_Receiver_XIAO.uf2
          # A file, directory or wildcard pattern that describes what to upload
          path: zephyr-workspace/Releases/SlimeNRF_Receiver_XIAO.uf2

      # - name: 💾 Upload SlimeNRF_Tracker_SuperMiniStacked.uf2
      #   uses: actions/upload-artifact@v4
      #   with:
      #     # Artifact name
      #     name: SlimeNRF_Tracker_SuperMiniStacked.uf2
      #     # A file, directory or wildcard pattern that describes what to upload
      #     path: zephyr-workspace/Releases/SlimeNRF_Tracker_SuperMiniStacked.uf2

      # - name: 💾 Upload SlimeNRF_Tracker_NoSleep_SuperMiniStacked.uf2
      #   uses: actions/upload-artifact@v4
      #   with:
      #     # Artifact name
      #     name: SlimeNRF_Tracker_NoSleep_SuperMiniStacked.uf2
      #     # A file, directory or wildcard pattern that describes what to upload
      #     path: zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleep_SuperMiniStacked.uf2

      - name: 📁 Create/Update Github Release
        uses: mini-bomba/create-github-release@v1.2.0
        with:
          token: ${{ secrets.gh_token }}
          tag: "latest"
          prerelease: false
          name: "Latest Firmware"
          body: |
            Successful build of the latest SlimeNRF Firmware. (Automated)
          files: |
            zephyr-workspace/Releases/SlimeNRF_Tracker_SuperMini.uf2
            zephyr-workspace/Releases/SlimeNRF_Tracker_XIAO.uf2
            zephyr-workspace/Releases/SlimeNRF_Tracker_R3.uf2
            zephyr-workspace/Releases/SlimeNRF_Receiver_Nordic_eByte_Dongle.hex
            zephyr-workspace/Releases/SlimeNRF_Receiver_SuperMini.uf2
            zephyr-workspace/Releases/SlimeNRF_Receiver_XIAO.uf2
            zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleep_SuperMini.uf2
            zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleep_XIAO.uf2
            zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleep_R3.uf2
            zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleepCLK_SuperMini.uf2
            zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleepCLK_XIAO.uf2
            zephyr-workspace/Releases/SlimeNRF_Tracker_CLK_SuperMini.uf2
            zephyr-workspace/Releases/SlimeNRF_Tracker_CLK_XIAO.uf2
            zephyr-workspace/Releases/SlimeNRF_Tracker_SlimevrMini.uf2
            zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleep_SlimevrMini.uf2
            # zephyr-workspace/Releases/SlimeNRF_Tracker_SuperMiniStacked.uf2
            # zephyr-workspace/Releases/SlimeNRF_Tracker_NoSleep_SuperMiniStacked.uf2
          clear_attachments: false