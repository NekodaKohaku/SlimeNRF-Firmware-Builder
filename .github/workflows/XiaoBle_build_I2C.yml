name: Build XiaoBle Tracker (XIAO BLE)

on:
  workflow_dispatch:

# 僅允許單一併發執行
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# 僅需 contents: write 即可發 Release / 上傳 artifact
permissions:
  contents: write

jobs:
  build:
    # 讓其中一個 matrix 失敗不會中止其他組合，但保留失敗狀態
    strategy:
      fail-fast: false
      matrix:
        boards:
          - boardname: "xiao_ble/nrf52840"
            clk: "disabled"
            type: "tracker"
            extraaction: "enabled"
            fileformat: "uf2"
            filename: "SlimeNRF_Tracker_Mag_XIAO"
            magnetometer: "enabled"
            sleep: "enabled"
            sw0: "disabled"

    runs-on: ubuntu-latest

    steps:
      - name: 💻 Acquire code (root)
        uses: actions/checkout@v5

      - name: 📝 Put commit hash/name in env variables
        shell: bash
        run: |
          echo "GIT_HASH=$(git rev-parse --short=8 HEAD)" >> $GITHUB_ENV
          {
            echo "GIT_MESSAGE<<EOF"
            git log -1 --pretty=%B
            echo "EOF"
          } >> $GITHUB_ENV

      - name: 🧹 Clean landing folder for workspace repo
        shell: bash
        run: |
          rm -rf zephyr-workspace/SlimeNRF-CI

      - name: 💻 Acquire code (workspace)
        uses: actions/checkout@v5
        with:
          path: zephyr-workspace/SlimeNRF-CI

      - name: 🧰 Install Dependencies + Python venv + West
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            git cmake ninja-build gperf ccache dfu-util device-tree-compiler wget \
            python3-dev python3-pip python3-setuptools python3-tk python3-wheel python3-venv \
            xz-utils file make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1
          python3 -m venv "$HOME/.venv"
          "$HOME/.venv/bin/python" -m pip install --upgrade pip
          "$HOME/.venv/bin/python" -m pip install west ninja
          # 讓後續步驟能直接找到 venv 的 python/pip/west
          echo "$HOME/.venv/bin" >> "$GITHUB_PATH"

      - name: 🪁 Install Zephyr SDK
        shell: bash
        run: |
          wget -q https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.17.2/zephyr-sdk-0.17.2_linux-x86_64_minimal.tar.xz
          tar xf zephyr-sdk-0.17.2_linux-x86_64_minimal.tar.xz -C "$HOME"/
          "$HOME/zephyr-sdk-0.17.2/setup.sh" -c -t arm-zephyr-eabi

      - name: ♻️ Initialize Zephyr Workspace
        shell: bash
        run: |
          cd zephyr-workspace
          rm -rf .west
          west init -l SlimeNRF-CI
          west update --narrow -o=--depth=1
          west zephyr-export

      - name: 🐍 Install Python Dependencies
        shell: bash
        run: |
          cd zephyr-workspace
          python -m pip install -r zephyr/scripts/requirements.txt

      - name: 🔧 Derive build variables (env)
        shell: bash
        run: |
          echo "FILEFORMAT=${{ matrix.boards.fileformat }}" >> $GITHUB_ENV
          echo "BOARD=${{ matrix.boards.boardname }}" >> $GITHUB_ENV
          echo "SENSOR_CLOCK=${{ matrix.boards.clk }}" >> $GITHUB_ENV
          echo "EXTRA_ACTIONS=${{ matrix.boards.extraaction }}" >> $GITHUB_ENV
          echo "MAGNETOMETER=${{ matrix.boards.magnetometer }}" >> $GITHUB_ENV
          echo "SLEEP=${{ matrix.boards.sleep }}" >> $GITHUB_ENV
          echo "SW0_BUTTON=${{ matrix.boards.sw0 }}" >> $GITHUB_ENV
          # 統一輸出檔名：<filename>_<git8>
          echo "OUTPUT_NAME=${{ matrix.boards.filename }}_${GIT_HASH}" >> $GITHUB_ENV

      - name: 🗂️ Prepare Releases folder
        shell: bash
        run: |
          cd zephyr-workspace
          rm -rf Releases
          mkdir -p Releases/dts

      # ===== Feature toggles 前，先備份 overlay (before) =====
      - name: 📸 Snapshot DTS BEFORE modifications
        if: ${{ matrix.boards.type == 'tracker' }}
        shell: bash
        run: |
          cd zephyr-workspace
          cp "SlimeVR-Tracker-nRF/boards/xiao_ble.overlay" "Releases/dts/xiao_ble.before.overlay" || true
          cp "SlimeVR-Tracker-nRF/boards/xiao_ble_nrf52840_sense.overlay" "Releases/dts/xiao_ble_sense.before.overlay" || true

      # ===== Feature toggles (只動 XIAO 檔) =====
      - name: 🔧 Disabling External Clock
        if: ${{ (matrix.boards.type == 'tracker') && (matrix.boards.clk == 'disabled') }}
        shell: bash
        run: |
          cd zephyr-workspace
          find='clk-gpios[ \t]='
          replace='// clk-gpios ='
          sed -i "s|$find|$replace|g" SlimeVR-Tracker-nRF/boards/xiao_ble.overlay
          sed -i "s|$find|$replace|g" SlimeVR-Tracker-nRF/boards/xiao_ble_nrf52840_sense.overlay
          printf "\nCONFIG_USE_SENSOR_CLOCK=n\n" >> SlimeVR-Tracker-nRF/prj.conf

      - name: 🔧 Enabling External Clock
        if: ${{ (matrix.boards.type == 'tracker') && (matrix.boards.clk == 'enabled') }}
        shell: bash
        run: |
          cd zephyr-workspace
          find="\/\/\sclk-gpios"
          replace="clk-gpios"
          sed -i "s/$find/$replace/g" SlimeVR-Tracker-nRF/boards/xiao_ble.overlay
          sed -i "s/$find/$replace/g" SlimeVR-Tracker-nRF/boards/xiao_ble_nrf52840_sense.overlay
          printf "\nCONFIG_USE_SENSOR_CLOCK=y\n" >> SlimeVR-Tracker-nRF/prj.conf

      - name: 🔧 Disabling Extra Action
        if: ${{ (matrix.boards.type == 'tracker') && (matrix.boards.extraaction == 'disabled') }}
        shell: bash
        run: |
          cd zephyr-workspace
          printf "\nCONFIG_USER_EXTRA_ACTIONS=n\n" >> SlimeVR-Tracker-nRF/prj.conf

      - name: 🔧 Enabling Extra Action
        if: ${{ (matrix.boards.type == 'tracker') && (matrix.boards.extraaction == 'enabled') }}
        shell: bash
        run: |
          cd zephyr-workspace
          printf "\nCONFIG_USER_EXTRA_ACTIONS=y\n" >> SlimeVR-Tracker-nRF/prj.conf

      - name: 🔧 Disabling Magnetometer
        if: ${{ (matrix.boards.type == 'tracker') && (matrix.boards.magnetometer == 'disabled') }}
        shell: bash
        run: |
          cd zephyr-workspace
          printf "\nCONFIG_SENSOR_USE_MAG=n\n" >> SlimeVR-Tracker-nRF/prj.conf

      - name: 🔧 Enabling Magnetometer
        if: ${{ (matrix.boards.type == 'tracker') && (matrix.boards.magnetometer == 'enabled') }}
        shell: bash
        run: |
          cd zephyr-workspace
          printf "\nCONFIG_SENSOR_USE_MAG=y\n" >> SlimeVR-Tracker-nRF/prj.conf

      - name: 🔧 Disabling Sleep
        if: ${{ (matrix.boards.type == 'tracker') && (matrix.boards.sleep == 'disabled') }}
        shell: bash
        run: |
          cd zephyr-workspace
          {
            printf "\nCONFIG_USE_IMU_WAKE_UP=n\n"
            printf "CONFIG_USE_ACTIVE_TIMEOUT=n\n"
            printf "CONFIG_SENSOR_LP_TIMEOUT=300000\n"
            printf "CONFIG_SENSOR_USE_LOW_POWER_2=n\n"
          } >> SlimeVR-Tracker-nRF/prj.conf

      - name: 🔧 Enabling Sleep
        if: ${{ (matrix.boards.type == 'tracker') && (matrix.boards.sleep == 'enabled') }}
        shell: bash
        run: |
          cd zephyr-workspace
          {
            printf "\nCONFIG_USE_IMU_WAKE_UP=y\n"
            printf "CONFIG_USE_ACTIVE_TIMEOUT=y\n"
          } >> SlimeVR-Tracker-nRF/prj.conf

      - name: 🔧 Disabling SW0 Button
        if: ${{ (matrix.boards.type == 'tracker') && (matrix.boards.sw0 == 'disabled') }}
        shell: bash
        run: |
          cd zephyr-workspace
          find='sw0[ \t]='
          replace='// sw0 ='
          sed -i "s|$find|$replace|g" SlimeVR-Tracker-nRF/boards/xiao_ble.overlay
          sed -i "s|$find|$replace|g" SlimeVR-Tracker-nRF/boards/xiao_ble_nrf52840_sense.overlay

      - name: 🔧 Enabling SW0 Button
        if: ${{ (matrix.boards.type == 'tracker') && (matrix.boards.sw0 == 'enabled') }}
        shell: bash
        run: |
          cd zephyr-workspace
          find='\/\/\ssw0\s='
          replace='sw0 ='
          sed -i "s/$find/$replace/g" SlimeVR-Tracker-nRF/boards/xiao_ble.overlay
          sed -i "s/$find/$replace/g" SlimeVR-Tracker-nRF/boards/xiao_ble_nrf52840_sense.overlay

      # ===== Build =====
      - name: 🔨 Build SlimeVR-Tracker-nRF - ${{ matrix.boards.boardname }}
        if: ${{ matrix.boards.type == 'tracker' }}
        shell: bash
        run: |
          cd zephyr-workspace
          rm -rf SlimeVR-Tracker-nRF/build
          mkdir -p SlimeVR-Tracker-nRF/build
          west build \
            --board "${BOARD}" \
            --pristine=always SlimeVR-Tracker-nRF \
            --build-dir SlimeVR-Tracker-nRF/build \
            -- \
            -DNCS_TOOLCHAIN_VERSION=NONE \
            -DBOARD_ROOT=../SlimeVR-Tracker-nRF
          # 統一輸出檔名
          mv "SlimeVR-Tracker-nRF/build/SlimeVR-Tracker-nRF/zephyr/zephyr.${FILEFORMAT}" \
             "Releases/${OUTPUT_NAME}.${FILEFORMAT}"

      # ===== DTS / overlay 收集、diff 與打包 =====
      - name: Collect DTS (before/after) & Diff, then Package
        shell: bash
        run: |
          set -euo pipefail
          cd zephyr-workspace

          DTS_MAIN="SlimeVR-Tracker-nRF/boards/xiao_ble.overlay"
          DTS_SENSE="SlimeVR-Tracker-nRF/boards/xiao_ble_nrf52840_sense.overlay"

          # AFTER（修改後）
          cp "$DTS_MAIN" "Releases/dts/xiao_ble.after.overlay" || true
          cp "$DTS_SENSE" "Releases/dts/xiao_ble_sense.after.overlay" || true

          # diff（僅當 before 存在）
          if [[ -f "Releases/dts/xiao_ble.before.overlay" && -f "Releases/dts/xiao_ble.after.overlay" ]]; then
            diff -u "Releases/dts/xiao_ble.before.overlay" "Releases/dts/xiao_ble.after.overlay" > "Releases/dts/xiao_ble.pins.diff" || true
          else
            echo "WARN: xiao_ble.before.overlay not found, skipping diff"
          fi

          # 最終展開的 zephyr.dts（若存在就一起打包）
          if [[ -f "SlimeVR-Tracker-nRF/build/zephyr/zephyr.dts" ]]; then
            cp "SlimeVR-Tracker-nRF/build/zephyr/zephyr.dts" "Releases/dts/zephyr.final.dts"
          fi

          tar -czf "Releases/${OUTPUT_NAME}_DTS.tgz" -C Releases dts
          ls -la Releases

      - name: Upload Artifact (UF2)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}.${{ env.FILEFORMAT }}
          path: zephyr-workspace/Releases/${{ env.OUTPUT_NAME }}.${{ env.FILEFORMAT }}

      - name: Upload Artifact (DTS package)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_NAME }}_DTS.tgz
          path: zephyr-workspace/Releases/${{ env.OUTPUT_NAME }}_DTS.tgz

      - name: Create/Update Github Release
        uses: mini-bomba/create-github-release@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "latest"
          prerelease: false
          name: "Latest Firmware"
          body: |
            Manual build of the SlimeNRF Tracker Firmware (XIAO BLE).

            Commit: ${{ env.GIT_HASH }}
            Message:
            ${{ env.GIT_MESSAGE }}

            Board: ${{ env.BOARD }}
            Features:
              MAG=${{ env.MAGNETOMETER }}, SLEEP=${{ env.SLEEP }},
              CLOCK=${{ env.SENSOR_CLOCK }}, EXTRA=${{ env.EXTRA_ACTIONS }},
              SW0=${{ env.SW0_BUTTON }}

            DTS artifacts:
              - xiao_ble.before.overlay / xiao_ble.after.overlay
              - xiao_ble.pins.diff (before vs after)
              - zephyr.final.dts (if present)
          files: |
            zephyr-workspace/Releases/${{ env.OUTPUT_NAME }}.${{ env.FILEFORMAT }}
            zephyr-workspace/Releases/${{ env.OUTPUT_NAME }}_DTS.tgz
          clear_attachments: true
